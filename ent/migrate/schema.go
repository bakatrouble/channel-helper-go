// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ImageHashesColumns holds the columns for the "image_hashes" table.
	ImageHashesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "image_hash", Type: field.TypeString},
		{Name: "post_image_hash", Type: field.TypeUUID, Unique: true, Nullable: true},
		{Name: "upload_task_image_hash", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// ImageHashesTable holds the schema information for the "image_hashes" table.
	ImageHashesTable = &schema.Table{
		Name:       "image_hashes",
		Columns:    ImageHashesColumns,
		PrimaryKey: []*schema.Column{ImageHashesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "image_hashes_posts_image_hash",
				Columns:    []*schema.Column{ImageHashesColumns[2]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "image_hashes_upload_tasks_image_hash",
				Columns:    []*schema.Column{ImageHashesColumns[3]},
				RefColumns: []*schema.Column{UploadTasksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"photo", "video", "animation"}},
		{Name: "file_id", Type: field.TypeString},
		{Name: "is_sent", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "sent_at", Type: field.TypeTime, Nullable: true},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "post_is_sent",
				Unique:  false,
				Columns: []*schema.Column{PostsColumns[3]},
			},
			{
				Name:    "post_type",
				Unique:  false,
				Columns: []*schema.Column{PostsColumns[1]},
			},
		},
	}
	// PostMessageIdsColumns holds the columns for the "post_message_ids" table.
	PostMessageIdsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "chat_id", Type: field.TypeInt64},
		{Name: "message_id", Type: field.TypeInt},
		{Name: "post_message_ids", Type: field.TypeUUID, Nullable: true},
	}
	// PostMessageIdsTable holds the schema information for the "post_message_ids" table.
	PostMessageIdsTable = &schema.Table{
		Name:       "post_message_ids",
		Columns:    PostMessageIdsColumns,
		PrimaryKey: []*schema.Column{PostMessageIdsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "post_message_ids_posts_message_ids",
				Columns:    []*schema.Column{PostMessageIdsColumns[3]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "postmessageid_chat_id_message_id",
				Unique:  true,
				Columns: []*schema.Column{PostMessageIdsColumns[1], PostMessageIdsColumns[2]},
			},
		},
	}
	// UploadTasksColumns holds the columns for the "upload_tasks" table.
	UploadTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"photo", "video", "animation"}},
		{Name: "data", Type: field.TypeBytes, Nullable: true},
		{Name: "is_processed", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "sent_at", Type: field.TypeTime, Nullable: true},
	}
	// UploadTasksTable holds the schema information for the "upload_tasks" table.
	UploadTasksTable = &schema.Table{
		Name:       "upload_tasks",
		Columns:    UploadTasksColumns,
		PrimaryKey: []*schema.Column{UploadTasksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "uploadtask_is_processed",
				Unique:  false,
				Columns: []*schema.Column{UploadTasksColumns[3]},
			},
			{
				Name:    "uploadtask_type",
				Unique:  false,
				Columns: []*schema.Column{UploadTasksColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ImageHashesTable,
		PostsTable,
		PostMessageIdsTable,
		UploadTasksTable,
	}
)

func init() {
	ImageHashesTable.ForeignKeys[0].RefTable = PostsTable
	ImageHashesTable.ForeignKeys[1].RefTable = UploadTasksTable
	PostMessageIdsTable.ForeignKeys[0].RefTable = PostsTable
}
