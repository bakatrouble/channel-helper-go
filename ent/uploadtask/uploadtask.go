// Code generated by ent, DO NOT EDIT.

package uploadtask

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	uuidv7 "github.com/moroz/uuidv7-go"
)

const (
	// Label holds the string label denoting the uploadtask type in the database.
	Label = "upload_task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldIsProcessed holds the string denoting the is_processed field in the database.
	FieldIsProcessed = "is_processed"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldSentAt holds the string denoting the sent_at field in the database.
	FieldSentAt = "sent_at"
	// FieldImageHash holds the string denoting the image_hash field in the database.
	FieldImageHash = "image_hash"
	// Table holds the table name of the uploadtask in the database.
	Table = "upload_tasks"
)

// Columns holds all SQL columns for uploadtask fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldData,
	FieldIsProcessed,
	FieldCreatedAt,
	FieldSentAt,
	FieldImageHash,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsProcessed holds the default value on creation for the "is_processed" field.
	DefaultIsProcessed bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuidv7.UUID
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypePhoto     Type = "photo"
	TypeVideo     Type = "video"
	TypeAnimation Type = "animation"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypePhoto, TypeVideo, TypeAnimation:
		return nil
	default:
		return fmt.Errorf("uploadtask: invalid enum value for type field: %q", _type)
	}
}

// OrderOption defines the ordering options for the UploadTask queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByIsProcessed orders the results by the is_processed field.
func ByIsProcessed(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsProcessed, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// BySentAt orders the results by the sent_at field.
func BySentAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSentAt, opts...).ToFunc()
}

// ByImageHash orders the results by the image_hash field.
func ByImageHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImageHash, opts...).ToFunc()
}
